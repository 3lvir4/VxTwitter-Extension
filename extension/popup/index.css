@charset "UTF-8";
@import url("https://fonts.googleapis.com/css2?family=Poppins&display=swap");
/*  The new CSS reset - version 1.8.4 (last updated 14.2.2023)
 *  GitHub page: https://github.com/elad2412/the-new-css-reset
 *
 *
 *
 *  Remove all the styles of the "User-Agent-Stylesheet", except for the 'display' property
 *  - The "symbol *" part is to solve Firefox SVG sprite bug
 * */
*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
  all: unset;
  display: revert;
}

/* Preferred box-sizing value */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reapply the pointer cursor for anchor tags */
a, button {
  cursor: revert;
}

/* Remove list styles (bullets/numbers) */
ol, ul, menu {
  list-style: none;
}

/* For images to not be able to exceed their container */
img {
  max-inline-size: 100%;
  max-block-size: 100%;
}

/* removes spacing between cells in tables */
table {
  border-collapse: collapse;
}

/* Safari - solving issue when using user-select:none on the <body> text input doesn't working */
input, textarea {
  -webkit-user-select: auto;
}

/* revert the 'white-space' property for textarea elements on Safari */
textarea {
  white-space: revert;
}

/* minimum style to allow to style meter element */
meter {
  -webkit-appearance: revert;
  appearance: revert;
}

/* preformatted text - use only for this feature */
:where(pre) {
  all: revert;
}

/* reset default text opacity of input placeholder */
::placeholder {
  color: unset;
}

/* remove default dot (â€¢) sign */
::marker {
  content: initial;
}

/* fix the feature of 'hidden' attribute.
 * display:revert revert to element instead of attribute */
:where([hidden]) {
  display: none;
}

/* revert for bug in Chromium browsers
 * - fix for the content editable attribute will work properly.
 * - webkit-user-select: auto added for Safari in case of using user-select:none on wrapper element*/
:where([contenteditable]:not([contenteditable=false])) {
  -moz-user-modify: read-write;
  -webkit-user-modify: read-write;
  overflow-wrap: break-word;
  -webkit-line-break: after-white-space;
  -webkit-user-select: auto;
}

/* apply back the draggable feature - exist only in Chromium and Safari */
:where([draggable=true]) {
  -webkit-user-drag: element;
}

/* Revert Modal native behavior */
:where(dialog:modal) {
  all: revert;
}

.switch {
  position: relative;
  display: inline-block;
  inline-size: 3rem;
  block-size: 1.5rem;
}
.switch input {
  visibility: hidden;
  inline-size: 0;
  block-size: 0;
}
.switch .slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #fff;
  -webkit-transition: 0.4s;
  transition: 0.4s;
  border-radius: 3rem;
}
.switch .slider:before {
  position: absolute;
  content: "";
  block-size: 1.1rem;
  inline-size: 1.1rem;
  left: 0.2rem;
  bottom: 0.2rem;
  background-color: #1D9BF0;
  -webkit-transition: 0.4s;
  transition: 0.4s;
  border-radius: 50%;
  z-index: 1;
}
.switch input:checked + .slider:before {
  -webkit-transform: translateX(1.5rem);
  -ms-transform: translateX(1.5rem);
  transform: translateX(1.5rem);
  background-color: #fff;
}
.switch input:checked + .slider {
  background: #1D9BF0;
}

body {
  font-size: 10px;
  font-family: "Poppins", sans-serif;
  color: #fff;
}

.sr-only {
  display: none;
}

.container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  inline-size: 20rem;
  max-inline-size: 20rem;
  max-block-size: 40rem;
  overflow: auto;
  padding: 1em 2em;
  background-color: #111;
  border: 1px solid red;
}
.container h1 {
  inline-size: 12rem;
  block-size: 3rem;
  font-size: 1.5rem;
  text-align: center;
  margin-block-end: 1.5em;
  border-block-end: 2px solid #fff;
}
.container div[role=menu] {
  inline-size: 100%;
}
.container div[role=menu] .vx-menuitem {
  display: flex;
  justify-content: space-between;
  align-items: center;
}
.container div[role=menu] .vx-menuitem span {
  font-size: 0.8rem;
}

/*# sourceMappingURL=index.css.map */
